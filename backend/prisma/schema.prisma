// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// model

model User {
  id              Int          @id @default(autoincrement())
  username        String       @unique @db.VarChar(50)
  password        String       @db.VarChar(50)
  nickName        String       @default("") @db.VarChar(50)
  email           String       @db.VarChar(50)
  headPic         String       @default("") @db.VarChar(100)
  createTime      DateTime     @default(now())
  updateTime      DateTime     @updatedAt
  friends         Friendship[] @relation("userToFriend")
  inverseFrinends Friendship[] @relation("friendToUser")
}

model Friendship {
  user     User @relation("userToFriend", fields: [userId], references: [id])
  userId   Int
  friend   User @relation("friendToUser", fields: [friendId], references: [id])
  friendId Int

  @@id([userId, friendId])
}

model FriendRequest {
  id         Int      @id @default(autoincrement())
  // 请求方
  fromUserId Int
  // 接收方
  toUserId   Int
  reason     String   @default("") @db.VarChar(100)
  // 状态 0 待处理 1 已同意 2 已拒绝
  status     Int      @default(0)
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt
}

model Chatroom {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(50)
  // false 单聊, true 群聊
  type       Boolean  @default(false)
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt
}

// 没有创建外键
model ChatroomUser {
  userId     Int
  chatroomId Int

  @@id([userId, chatroomId])
}

model ChatHistory {
  id         Int      @id @default(autoincrement())
  senderId   Int
  chatroomId Int
  //聊天记录类型 text:0、image:1、file:2
  content    String   @db.VarChar(1000)
  type       Int      @default(0)
  createTime DateTime @default(now())
}
